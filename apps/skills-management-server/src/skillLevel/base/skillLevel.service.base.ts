/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  SkillLevel as PrismaSkillLevel,
  Skill as PrismaSkill,
  Collaborator as PrismaCollaborator,
} from "@prisma/client";

export class SkillLevelServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.SkillLevelCountArgs, "select">
  ): Promise<number> {
    return this.prisma.skillLevel.count(args);
  }

  async skillLevels(
    args: Prisma.SkillLevelFindManyArgs
  ): Promise<PrismaSkillLevel[]> {
    return this.prisma.skillLevel.findMany(args);
  }
  async skillLevel(
    args: Prisma.SkillLevelFindUniqueArgs
  ): Promise<PrismaSkillLevel | null> {
    return this.prisma.skillLevel.findUnique(args);
  }
  async createSkillLevel(
    args: Prisma.SkillLevelCreateArgs
  ): Promise<PrismaSkillLevel> {
    return this.prisma.skillLevel.create(args);
  }
  async updateSkillLevel(
    args: Prisma.SkillLevelUpdateArgs
  ): Promise<PrismaSkillLevel> {
    return this.prisma.skillLevel.update(args);
  }
  async deleteSkillLevel(
    args: Prisma.SkillLevelDeleteArgs
  ): Promise<PrismaSkillLevel> {
    return this.prisma.skillLevel.delete(args);
  }

  async getSkill(parentId: string): Promise<PrismaSkill | null> {
    return this.prisma.skillLevel
      .findUnique({
        where: { id: parentId },
      })
      .skill();
  }

  async getCollaborator(parentId: string): Promise<PrismaCollaborator | null> {
    return this.prisma.skillLevel
      .findUnique({
        where: { id: parentId },
      })
      .collaborator();
  }
}
